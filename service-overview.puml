@startuml

interface CourseService {
  + save(course: Course): void
  + saveAll(courses: List<Course>): void
}

interface AvailabilityService {
  + save(availability: Availability): void
  + saveAll(availabilities: List<Availability>): void
}

interface AssignmentService {
  + save(assignment: Assignment): void
  + saveAll(assignments: List<Assignment>): void
}

interface ScheduleService {
  + getScheduleForUser(): ScheduleDTO
  + saveSchedule(dto: ScheduleDTO): void
  + generateScheduleFromFastAPI(setupDTO: StudySetupDTO): ScheduleDTO
}

'================ Implementations ==================
class CourseServiceImpl {
  - courseDao: CourseDao
}

class AvailabilityServiceImpl {
  - availabilityDao: AvailabilityDao
}

class AssignmentServiceImpl {
  - assignmentDao: AssignmentDao
}

class ScheduleServiceImpl {
  - scheduleDao: ScheduleDao
  - userDao: UserDao
  - courseDao: CourseDao
  - topicDao: TopicDao
  - assignmentDao: AssignmentDao
  - studyPreferenceDao: StudyPreferenceDao
  - mapper: DTOMapper
}

'================ Relationships ==================
CourseServiceImpl ..|> CourseService
AvailabilityServiceImpl ..|> AvailabilityService
AssignmentServiceImpl ..|> AssignmentService
ScheduleServiceImpl ..|> ScheduleService

@enduml

@startuml

'================ Interfaces ==================
interface UserService {
  + save(user: User): User
  + findByUid(uid: String): User
}

interface TopicService {
  + save(topic: Topic): void
  + saveAll(topics: List<Topic>): void
}

interface TermService {
  + save(term: Term): void
}

interface StudySetupService {
  + processStudySetup(userUid: String, dto: StudySetupDTO): void
  + getStudySetup(userUid: String): StudySetupDTO
}

interface StudyPreferenceService {
  + getPreference(userUid: String): StudyPreferenceDTO
  + saveOrUpdate(userUid: String, dto: StudyPreferenceDTO): StudyPreferenceDTO
}

interface ExamService {
  + save(exam: Exam): void
  + saveAll(exams: List<Exam>): void
}

class UserServiceImpl {
  - userDao: UserDao
}

class TopicServiceImpl {
  - topicDao: TopicDao
}

class TermServiceImpl {
  - termDao: TermDao
}

class StudySetupServiceImpl {
  - userDao: UserDao
  - courseDao: CourseDao
  - topicDao: TopicDao
  - examDao: ExamDao
  - assignmentDao: AssignmentDao
  - availabilityDao: AvailabilityDao
}

class StudyPreferenceServiceImpl {
  - studyPreferenceDao: StudyPreferenceDao
  - studyPreferenceMapper: StudyPreferenceMapper
}

class ExamServiceImpl {
  - examDao: ExamDao
}


UserServiceImpl ..|> UserService
TopicServiceImpl ..|> TopicService
TermServiceImpl ..|> TermService
StudySetupServiceImpl ..|> StudySetupService
StudyPreferenceServiceImpl ..|> StudyPreferenceService
ExamServiceImpl ..|> ExamService

@enduml