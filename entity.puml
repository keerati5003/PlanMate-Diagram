@startuml

class Schedule {
    - id: String
    - generatedAt: LocalDateTime
    - examType: ExamType
    - user: User
    - term: Term
    - sessions: List<Session>
}

class Session {
    - sessionId: String
    - date: LocalDate
    - start: String
    - end: String
    - duration: Long
    - isCompleted: Boolean
    - isScheduled: Boolean
    - sessionNumber: Integer
    - totalSessionsInGroup: Integer
    - type: SessionType
    - schedule: Schedule
    - course: Course
    - topic: Topic
    - assignment: Assignment
    - focusSessions: List<FocusSession>
}

class Assignment {
    - id: String
    - name: String
    - dueDate: LocalDate
    - dueTime: String
    - estimatedTime: Long
    - completed: Boolean
    - examType: ExamType
    - course: Course
    - associatedTopics: List<Topic>
}

class Availability {
    - id: Long
    - date: LocalDate
    - startTime: LocalTime
    - endTime: LocalTime
    - user: User
}

class Course {
    - courseId: Long
    - courseCode: String
    - name: String
    - credit: Long
    - term: Term
    - topics: List<Topic>
    - assignments: List<Assignment>
    - exams: List<Exam>
}

class Exam {
    - id: String
    - type: ExamType
    - date: LocalDate
    - startTime: String
    - endTime: String
    - course: Course
}

class FocusSession {
    - id: String
    - user: User
    - session: Session
    - course: Course
    - topic: Topic
    - assignment: Assignment
    - focusStart: LocalDateTime
    - focusEnd: LocalDateTime
    - elapsedSeconds: Long
    - plannedDuration: Long
    - status: FocusStatus
    - sessionType: SessionType
}

class GroupMember {
    - id: Long
    - user: User
    - group: StudyGroup
}

class StudyGroup {
    - id: Long
    - name: String
    - imageUrl: String
    - joinCode: String
    - members: List<GroupMember>
}

class StudyPreference {
    - userUid: String
    - minSessionDuration: Integer
    - maxSessionDuration: Integer
    - preferredStudyTimes: List<String>
    - revisionFrequency: String
    - breakDurations: Integer
    - user: User
}

class Term {
    - termId: Long
    - name: String
    - startDate: LocalDate
    - endDate: LocalDate
    - user: User
    - courses: List<Course>
}

class Topic {
    - id: String
    - name: String
    - difficulty: Long
    - confidence: Long
    - estimatedStudyTime: Long
    - examType: ExamType
    - course: Course
}

class User {
    - uid: String
    - email: String
    - fcmToken: String
    - notifications: List<Notification>
    - pendingNotifications: List<PendingNotification>
}

class Notification {
    - id: long
    - title: String
    - content: String
    - isRead: Boolean
    - type: NotificationType
    - time: LocalDateTime
    - user: User
}

class PendingNotification {
    - id: Long
    - targetUserUid: String
    - title: String
    - content: String
    - type: NotificationType
    - createdAt: LocalDateTime
}

@enduml
