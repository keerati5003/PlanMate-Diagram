@startuml

interface StudyGroupService {
    + getGroups(): List<StudyGroupResponseDTO>
    + createGroup(groupInfo: GroupRequestDTO): ResponseEntity<?>
    + joinGroup(joinCode: String): ResponseEntity<?>
    + getGroupProgress(groupId: Long): List<GroupMemberProgressDTO>
}

interface SessionService {
    + getToDoListSessions(): Map<String, List<SessionDTO>>
    + getCompletedSessions(): List<SessionDTO>
}

interface StudyAnalyticsService {
    + getAnalytics(range: String, date: LocalDate): StudyAnalyticsDTO
}

interface FocusSessionService {
    + getFocusSessionById(id: String): FocusSessionDTO
    + getActiveFocusSessionForUser(userUid: String): FocusSessionDTO
    + startFocusSession(sessionId: String): Map<String, Object>
    + pauseFocusSession(focusSessionId: String): FocusSessionDTO
    + resumeFocusSession(focusSessionId: String): FocusSessionDTO
    + endFocusSession(focusSessionId: String): FocusSessionDTO
    + joinSharedFocusRoom(roomId: String): Map<String, Object>
    + inviteUserToSharedRoom(targetUserId: String): Map<String, Object>
    + declineInvitation(invitationId: String): Map<String, Object>
}

class StudyGroupServiceImpl {
    - studyGroupDao: StudyGroupDao
    - groupMemberDao: GroupMemberDao
    - sessionDao: SessionDao
    - focusSessionDao: FocusSessionDao
    - userDao: UserDao
    - firebaseAuth: FirebaseAuth
    - random: SecureRandom
    - JOIN_CODE_CHARACTERS: String
    - JOIN_CODE_LENGTH: int
}

class SessionServiceImpl {
    - sessionDao: SessionDao
    - userDao: UserDao
    - dtoMapper: DTOMapper
}

class StudyAnalyticsServiceImpl {
    - studyAnalyticsDao: StudyAnalyticsDao
}

class FocusSessionServiceImpl {
    - focusSessionDao: FocusSessionDao
    - sessionDao: SessionDao
    - groupMemberDao: GroupMemberDao
    - userDao: UserDao
    - firebaseFocusService: FirebaseFocusService
    - firebaseAuth: FirebaseAuth
    - dtoMapper: DTOMapper
}

StudyGroupServiceImpl ..|> StudyGroupService
SessionServiceImpl ..|> SessionService
StudyAnalyticsServiceImpl ..|> StudyAnalyticsService
FocusSessionServiceImpl ..|> FocusSessionService

@enduml
